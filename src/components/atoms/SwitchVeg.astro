---
const { id = "filter-switch", checked = false, onChange = undefined } = Astro.props;
---
<label class="switch" for={id}>
  <input
    id={id}
    type="checkbox"
    role="switch"
    aria-checked={checked ? 'true' : 'false'}
    aria-label="Activer ou dÃ©sactiver le filtre"
    checked={checked}
    onchange={onChange}
  >
  <span class="slider"></span>
</label>

<style>
.switch {
  position: relative;
  display: inline-block;
  width: 76px;
  height: 40px;
  background: none;
  border: none;
  -webkit-tap-highlight-color: transparent;
}
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
  -webkit-tap-highlight-color: transparent;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #3b6b6e;
  border: 2px solid #183233;
  transition: .4s;
  border-radius: 34px;
  box-shadow: none;
  -webkit-tap-highlight-color: transparent;
}
.slider:before {
  position: absolute;
  content: "";
  height: 35px;
  width: 35px;
  left: 1px;
  top: 50%;
  transform: translateY(-50%);
  background-color: #183233;
  transition: .4s;
  border-radius: 50%;
}
.switch input:checked + .slider {
  background-color: var(--secondary-500);
  border-color: var(--secondary-700);
}
.switch input:checked + .slider:before {
  transform: translateX(35px) translateY(-50%);
  background-color: var(--primary-500);
}
.switch:focus-within .slider {
  outline: 2px solid #183233;
  outline-offset: 2px;
}
.switch .slider {
  box-shadow: 0 0 2px #183233;
}
.switch input:focus + .slider {
  outline: 2px solid #183233;
  outline-offset: 2px;
}
</style>

  <script>
    // Filtering logic for veg category switch
    document.addEventListener('DOMContentLoaded', function() {
      const filterSwitch = document.getElementById('filter-switch') as HTMLInputElement | null;
      const productsList = document.getElementById('products-list');
      if (!filterSwitch || !productsList) return;
      function isVegCategory(li: HTMLLIElement) {
        // Accepts any category containing 'veg' (case-insensitive)
        return li.dataset.category && li.dataset.category.includes('veg');
      }
      function updateFilter() {
        if (!filterSwitch) return;
        const checked = filterSwitch.checked;
        if (!productsList) return;
        const items = productsList.querySelectorAll('li');
        items.forEach(li => {
          if (!checked) {
            li.style.display = '';
          } else {
            if (isVegCategory(li)) {
              li.style.display = '';
            } else {
              li.style.display = 'none';
            }
          }
        });
      }
      filterSwitch.addEventListener('change', updateFilter);
      if (filterSwitch.checked) updateFilter();
    });
  </script>